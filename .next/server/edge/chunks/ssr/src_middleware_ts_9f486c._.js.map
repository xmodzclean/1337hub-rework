{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/middleware.ts"],"sourcesContent":["import { getToken } from 'next-auth/jwt';\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nexport async function middleware(req: NextRequest) {\n\n  const token = await getToken({\n    req,\n    // secret: process.env.NEXTAUTH_SECRET as string,\n    // cookieName: \"__Secure-authjs.session-token\",\n    // secureCookie : true,\n  });\n\n\n  if (!token) {\n    const url = req.nextUrl.clone();\n    url.pathname = '/';\n    url.searchParams.set('error', 'ranking');\n    return NextResponse.redirect(url);\n  }\n\n  // Check if user is banned by making an API call instead of direct Prisma\n  if (token.login) {\n    try {\n      // Create a new URL for the API call\n      const apiUrl = new URL('/api/auth/check-ban', req.url);\n      apiUrl.searchParams.set('login', token.login as string);\n      \n      const response = await fetch(apiUrl.toString(), {\n        headers: {\n          'Cookie': req.headers.get('Cookie') || '',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.banned) {\n          const url = req.nextUrl.clone();\n          url.pathname = '/';\n          url.searchParams.set('error', 'banned');\n          url.searchParams.set('reason', encodeURIComponent(data.reason));\n          return NextResponse.redirect(url);\n        }\n      }\n    } catch (error) {\n      console.error('Error checking ban status:', error);\n    }\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: ['/ranking', '/blackhole'],\n};\n"],"names":[],"mappings":";;;;;;;;;;AAIO,eAAe,WAAW,GAAgB;IAE/C,MAAM,QAAQ,MAAM,CAAA,GAAA,4IAAA,CAAA,WAAQ,AAAD,EAAE;QAC3B;IAIF;IAGA,IAAI,CAAC,OAAO;QACV,MAAM,MAAM,IAAI,OAAO,CAAC,KAAK;QAC7B,IAAI,QAAQ,GAAG;QACf,IAAI,YAAY,CAAC,GAAG,CAAC,SAAS;QAC9B,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,yEAAyE;IACzE,IAAI,MAAM,KAAK,EAAE;QACf,IAAI;YACF,oCAAoC;YACpC,MAAM,SAAS,IAAI,IAAI,uBAAuB,IAAI,GAAG;YACrD,OAAO,YAAY,CAAC,GAAG,CAAC,SAAS,MAAM,KAAK;YAE5C,MAAM,WAAW,MAAM,MAAM,OAAO,QAAQ,IAAI;gBAC9C,SAAS;oBACP,UAAU,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa;gBACzC;YACF;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,IAAI,KAAK,MAAM,EAAE;oBACf,MAAM,MAAM,IAAI,OAAO,CAAC,KAAK;oBAC7B,IAAI,QAAQ,GAAG;oBACf,IAAI,YAAY,CAAC,GAAG,CAAC,SAAS;oBAC9B,IAAI,YAAY,CAAC,GAAG,CAAC,UAAU,mBAAmB,KAAK,MAAM;oBAC7D,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;gBAC/B;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C;IACF;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAY;KAAa;AACrC"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}